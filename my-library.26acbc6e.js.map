{"mappings":"oeACA,IAAAA,EAAAC,EAAA,S,0BAGAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,GAAmB,EAEDF,SAASG,cAAc,kBAC/BF,iBAAiB,SAE/B,WACE,MAAMG,EAAoBJ,SAASG,cAAc,wBAEjD,GAAID,EACFE,EAAkBC,UAAY,GAC9BH,GAAmB,MACd,CACL,MAAMI,GAAgB,EAAAR,EAAAS,kBAAiB,YAAc,GAErD,GAAID,GAAiBA,EAAcE,OAAS,EAAG,CAE7C,MAAMC,EAqCd,SAAiCH,GAC/B,MAAMI,GAAa,EAAAZ,EAAAS,kBAAiB,cAC9BI,GAAa,EAAAb,EAAAS,kBAAiB,cACjC,IAACK,EAAiB,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAcE,OAAQK,IACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWF,OAAQM,IACrC,GAAIC,SAASL,EAAWI,GAAGE,MAAQD,SAAST,EAAcO,IAAK,CAE7D,MAAMI,EAAe,IAAKP,EAAWI,IACrCG,EAAaC,YAAcP,EAAWQ,QAAOC,GAASH,EAAaI,UAAUC,SAASF,EAAMJ,MAAKO,KAAIH,GAASA,EAAMI,OAAMC,KAAK,MAC/Hb,EAAec,KAAKT,E,CAI1B,OAAOL,C,CApDYe,CAAwBrB,GACRiB,KAAI,EAACK,eAAEA,EAAcC,YAAEA,EAAWC,aAAEA,EAAYd,GAAEA,EAAEE,YAAEA,EAAWa,aAAEA,MAC9F,IAAIC,EAAa,GAEfA,EADEH,EACW,GAAGI,EAAAC,eAAeD,EAAAE,YAAYN,IAE9B,mBAEf,MAAMO,EAAcL,EAAaM,MAAM,EAAG,GAC1C,MAAO,oCAAoCrB,qFAGhCgB,0BACAJ,qHAIwBE,EAAaQ,QAAQ,sHAEJV,sHAEHV,oEACCkB,kEAG5C,IACLX,KAAK,IAERrB,EAAkBC,UAAYI,EAC9BP,GAAmB,C,MAEnBE,EAAkBC,UAAY,kCAC9BH,GAAmB,C,QAsB3B,MAAMqC,EAAOvC,SAASG,cAAc,wBAChCoC,GACFA,EAAKtC,iBAAiB,SAGxB,SAAyBuC,IACvB,EAAAC,EAAAC,aAAYF,E","sources":["src/js/watched.js"],"sourcesContent":["// import { STORAGE_KEY_WATCHED } from \"./constants\";\nimport { loadLocalStorage} from \"./storage\";\nimport { IMG_BASE_URL, IMG_W500 } from \"./api\";\nimport { createModal } from \"./modal-cards\";\ndocument.addEventListener('DOMContentLoaded', function() {\n  let isContentVisible = false; \n\n  const watchedButton = document.querySelector('#watchedButton');\n  watchedButton.addEventListener('click', handleWatchedButtonClick);\n\n  function handleWatchedButtonClick() {\n    const watchedMoviesList = document.querySelector('.watched-movies-list');\n\n    if (isContentVisible) {\n      watchedMoviesList.innerHTML = '';\n      isContentVisible = false;\n    } else {\n      const watchedMovies = loadLocalStorage('watched') || [];\n\n      if (watchedMovies && watchedMovies.length > 0) {\n        var movies = getWatchedMoviesDetails(watchedMovies);\n        const postersMarkup = movies.map(({ original_title, poster_path, vote_average, id, genre_names, release_date }) => {\n          let posterPath = '';\n          if (poster_path) { \n            posterPath = `${IMG_BASE_URL}${IMG_W500}/${poster_path}`;\n          } else { \n            posterPath = 'No found poster!';\n          }\n          const releaseYear = release_date.slice(0, 4);\n          return `<li class='list-cards-item' key='${id}'>\n            <img\n              class='poster-list__img'\n              src='${posterPath}'\n              alt='${original_title}'\n              width\n              loading='lazy'\n            />\n            <span class='poster-list-rate'>${vote_average.toFixed(1)}</span>\n            <div class='poster-list-wrap'>\n              <h2 class='poster-list-title text-posters'><b>${original_title}</b></h2>\n              <div class='poster-list-info'>\n                <p class='poster-list-text text-posters'>${genre_names}</p>\n                <p class='poster-list-age text-posters'>| ${releaseYear}</p>\n              </div>\n            </div>\n          </li>`;\n        }).join('');\n\n        watchedMoviesList.innerHTML = postersMarkup;\n        isContentVisible = true;\n      } else {\n        watchedMoviesList.innerHTML = '<p>No watched movies found.</p>';\n        isContentVisible = true;\n      }\n    }\n  }\n});\n\nfunction getWatchedMoviesDetails(watchedMovies) {\n  const moviesData = loadLocalStorage('moviesData');\n  const genresList = loadLocalStorage('genresList'); // Încărcați lista de genuri\n  var moviesDetailed = [];\n  for (let i = 0; i < watchedMovies.length; i++) {\n    for (let j = 0; j < moviesData.length; j++) {\n      if (parseInt(moviesData[j].id) === parseInt(watchedMovies[i])) {\n        // Adăugați informații despre genuri în detaliile filmelor\n        const movieDetails = { ...moviesData[j] };\n        movieDetails.genre_names = genresList.filter(genre => movieDetails.genre_ids.includes(genre.id)).map(genre => genre.name).join(', ');\n        moviesDetailed.push(movieDetails);\n      }\n    }\n  }\n  return moviesDetailed;\n}\nconst list = document.querySelector('.library-movies-list');\nif (list) {\n  list.addEventListener('click', handleListClick);\n};\n\nfunction handleListClick(event) {\n  createModal(event);\n}\n"],"names":["$5uEKZ","parcelRequire","document","addEventListener","isContentVisible","querySelector","watchedMoviesList","innerHTML","watchedMovies","loadLocalStorage","length","postersMarkup","moviesData","genresList","moviesDetailed","i","j","parseInt","id","movieDetails","genre_names","filter","genre","genre_ids","includes","map","name","join","push","$7126a8cfa5cf9b17$var$getWatchedMoviesDetails","original_title","poster_path","vote_average","release_date","posterPath","$7rYDH","IMG_BASE_URL","IMG_W500","releaseYear","slice","toFixed","$7126a8cfa5cf9b17$var$list","event","$f7muo","createModal"],"version":3,"file":"my-library.26acbc6e.js.map"}