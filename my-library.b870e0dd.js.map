{"mappings":"oeAeA,IAAAA,EAAAC,EAAA,S,aAGAC,SAASC,iBAAiB,oBAAoB,WAExBD,SAASE,cAAc,gBAC/BD,iBAAiB,SAG7B,WACE,MAAME,EAAoBH,SAASE,cAAc,wBAC3CE,EAAkBJ,SAASE,cAAc,sBAC/CC,EAAkBE,UAAUC,IAAI,YAChCF,EAAgBC,UAAUE,OAAO,W,IAGnC,WACE,MAAMH,EAAkBJ,SAASE,cAAc,sBAGzCM,GAAc,EAAAV,EAAAW,kBAAiB,UAAY,GAEjD,GAAID,GAAeA,EAAYE,OAAS,EAAG,CACzC,IAAIC,EAmCV,SAA+BH,GAC7B,MAAMI,GAAa,EAAAd,EAAAW,kBAAiB,cAC9BI,GAAa,EAAAf,EAAAW,kBAAiB,cACpC,IAAIK,EAAiB,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAYE,OAAQK,IACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWF,OAAQM,IACrC,GAAIC,SAASL,EAAWI,GAAGE,MAAQD,SAAST,EAAYO,IAAK,CAE3D,MAAMI,EAAe,IAAKP,EAAWI,IACrCG,EAAaC,YAAcP,EAAWQ,QAAOC,GAASH,EAAaI,UAAUC,SAASF,EAAMJ,MAAKO,KAAIH,GAASA,EAAMI,OAAMC,KAAK,MAC/Hb,EAAec,KAAKT,E,CAI1B,OAAOL,C,CAjDUe,CAAsBrB,GACnC,MAAMsB,EAAgBnB,EAAOc,KAAI,EAACM,eAAEA,EAAcC,YAAEA,EAAWC,aAAEA,EAAYf,GAAEA,EAAEE,YAAEA,EAAWc,aAAEA,MAC9F,IAAIC,EAAa,GAEfA,EADEH,EACW,GAAGI,EAAAC,eAAeD,EAAAE,YAAYN,IAE9B,mBAEf,MAAMO,EAAcL,EAAaM,MAAM,EAAG,GAC1C,MAAO,oCAAoCtB,+EAGhCiB,wBACAJ,6GAIwBE,EAAaQ,QAAQ,kHAEJV,kHAEHX,kEACCmB,4DAG5C,IACLZ,KAAK,IAERvB,EAAgBsC,UAAYZ,C,MAE5B1B,EAAgBsC,UAAY,iC,CA7ChCC,E","sources":["src/js/queue.js"],"sourcesContent":["// document.addEventListener('DOMContentLoaded', function(){\n//     const queue=document.getElementById('queueButton');\n//     const hiddenQueue = document.querySelector('.hiddenContent-queue');\n//     let imgVisible = false;\n//     queue.addEventListener('click', function(){\n//         if(imgVisible){\n//             hiddenQueue.style.display = 'none';\n//             imgVisible = false;\n//         }else{\n//             hiddenQueue.style.display = 'block';\n//             imgVisible = true;\n\n//         }\n//     })\n// });\nimport { loadLocalStorage} from \"./storage\";\nimport { IMG_BASE_URL, IMG_W500 } from \"./api\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n  const queueButton = document.querySelector('#queueButton');\n  queueButton.addEventListener('click', displayQueueMovies);\n\n  handleQueueButtonClick();\n  function displayQueueMovies() {\n    const watchedMoviesList = document.querySelector('.watched-movies-list');\n    const queueMoviesList = document.querySelector('.queue-movies-list');\n    watchedMoviesList.classList.add('inactive')\n    queueMoviesList.classList.remove('inactive')\n  }\n\n  function handleQueueButtonClick() {\n    const queueMoviesList = document.querySelector('.queue-movies-list');\n\n\n    const queueMovies = loadLocalStorage('queue') || [];\n\n    if (queueMovies && queueMovies.length > 0) {\n      var movies = getQueueMoviesDetails(queueMovies);\n      const postersMarkup = movies.map(({ original_title, poster_path, vote_average, id, genre_names, release_date }) => {\n        let posterPath = '';\n        if (poster_path) {\n          posterPath = `${IMG_BASE_URL}${IMG_W500}/${poster_path}`;\n        } else {\n          posterPath = 'No found poster!';\n        }\n        const releaseYear = release_date.slice(0, 4);\n        return `<li class='list-cards-item' key='${id}'>\n          <img\n            class='poster-list__img'\n            src='${posterPath}'\n            alt='${original_title}'\n            width\n            loading='lazy'\n          />\n          <span class='poster-list-rate'>${vote_average.toFixed(1)}</span>\n          <div class='poster-list-wrap'>\n            <h2 class='poster-list-title text-posters'><b>${original_title}</b></h2>\n            <div class='poster-list-info'>\n              <p class='poster-list-text text-posters'>${genre_names}</p>\n              <p class='poster-list-age text-posters'>| ${releaseYear}</p>\n            </div>\n          </div>\n        </li>`;\n      }).join('');\n\n      queueMoviesList.innerHTML = postersMarkup;\n    } else {\n      queueMoviesList.innerHTML = '<p>No watched movies found.</p>';\n    }\n  }\n});\n\nfunction getQueueMoviesDetails(queueMovies) {\n  const moviesData = loadLocalStorage('moviesData');\n  const genresList = loadLocalStorage('genresList');\n  var moviesDetailed = [];\n  for (let i = 0; i < queueMovies.length; i++) {\n    for (let j = 0; j < moviesData.length; j++) {\n      if (parseInt(moviesData[j].id) === parseInt(queueMovies[i])) {\n        // Adăugați informații despre genuri în detaliile filmelor\n        const movieDetails = { ...moviesData[j] };\n        movieDetails.genre_names = genresList.filter(genre => movieDetails.genre_ids.includes(genre.id)).map(genre => genre.name).join(', ');\n        moviesDetailed.push(movieDetails);\n      }\n    }\n  }\n  return moviesDetailed;\n}\n"],"names":["$5uEKZ","parcelRequire","document","addEventListener","querySelector","watchedMoviesList","queueMoviesList","classList","add","remove","queueMovies","loadLocalStorage","length","movies","moviesData","genresList","moviesDetailed","i","j","parseInt","id","movieDetails","genre_names","filter","genre","genre_ids","includes","map","name","join","push","$a595e1401ec493e7$var$getQueueMoviesDetails","postersMarkup","original_title","poster_path","vote_average","release_date","posterPath","$7rYDH","IMG_BASE_URL","IMG_W500","releaseYear","slice","toFixed","innerHTML","handleQueueButtonClick"],"version":3,"file":"my-library.b870e0dd.js.map"}