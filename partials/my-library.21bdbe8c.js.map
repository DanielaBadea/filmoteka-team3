{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,MAAMC,EAAgBF,SAASG,eAAe,iBACxCC,EAAcJ,SAASG,eAAe,eACtCE,EAAcL,SAASG,eAAe,eACtCG,EAAyBN,SAASO,cACtC,6BAEIC,EAAuBR,SAASO,cACpC,2BAIIE,EAAgB,GAChBC,EAAe,GAGrB,SAASC,EAAaC,EAAWC,GAE/BD,EAAUE,UAAY,GAGtBD,EAAOE,SAAQC,IACb,MAAMC,EAAYjB,SAASkB,cAAc,KACzCD,EAAUE,YAAcH,EACxBJ,EAAUQ,YAAYH,EAAU,G,CAKpC,SAASI,EAAkBC,EAAMC,EAAaX,GAC5C,MAAMY,EAAYC,OAChB,yBAAyBH,EAAKI,wBAEd,OAAdF,GAA2C,KAArBA,EAAUG,SAClCJ,EAAYK,KAAKJ,GACjBb,EAAaC,EAAWW,G,CAI5BrB,EAAcD,iBAAiB,SAAS,WACtCoB,EAAkB,UAAWZ,EAAeH,E,IAG9CF,EAAYH,iBAAiB,SAAS,WACpCoB,EAAkB,QAASX,EAAcF,E,IAI3CH,EAAYJ,iBAAiB,SAAS,WACpCQ,EAAcoB,OAAS,EACvBlB,EAAaL,EAAwBG,E,OAQzCT,SAASC,iBAAiB,oBAAoB,WAC5C,IAAI6B,EAAQ9B,SAASG,eAAe,WA6BpC,SAAS4B,IACPD,EAAME,MAAMC,QAAU,M,CA7BPjC,SAASkC,iBAAiB,eAgChCnB,SAAQ,SAAUoB,GAC3BA,EAAKlC,iBAAiB,SAAS,YA/BjC,SAAmBmC,GACjB,IAAIC,EAAWrC,SAASO,cAAc,UAClC+B,EAAiBtC,SAASO,cAAc,gBACxCgC,EAAoBvC,SAASO,cAAc,mBAC3CiC,EAAuBxC,SAASO,cAAc,uBAGlDkC,MACE,sCAAsCL,8CAErCM,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAEJP,EAAenB,YAAc0B,EAAKC,MAClCP,EAAkBpB,YAAc0B,EAAKE,SACrCP,EAAqBrB,YAAc,iBAAiB0B,EAAKG,eAGzDlB,EAAME,MAAMC,QAAU,OAAO,IAE9BgB,OAAMC,GAASC,QAAQD,MAAM,gCAAiCA,KAGjEb,EAASpC,iBAAiB,QAAS8B,E,CAajCqB,CAHcjB,EAAKkB,QAAQjB,Q,OAO/BkB,OAAOrD,iBAAiB,SAAS,SAAUsD,GACrCA,EAAMC,SAAW1B,GACnBC,G","sources":["src/js/navigationScript.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const watchedButton = document.getElementById('watchedButton');\n  const queueButton = document.getElementById('queueButton');\n  const clearButton = document.getElementById('clearButton');\n  const watchedMoviesContainer = document.querySelector(\n    '.watched-movies-container'\n  );\n  const queueMoviesContainer = document.querySelector(\n    '.queue-movies-container'\n  );\n\n  // Arrays to store watched and queued movies\n  const watchedMovies = [];\n  const queuedMovies = [];\n\n  // Function to update the movie display\n  function updateMovies(container, movies) {\n    // Clear the previous content\n    container.innerHTML = '';\n\n    // Display each movie\n    movies.forEach(movie => {\n      const movieItem = document.createElement('p');\n      movieItem.textContent = movie;\n      container.appendChild(movieItem);\n    });\n  }\n\n  // Event listener for the \"WATCHED\" and \"Queue\" buttons\n  function handleButtonClick(type, moviesArray, container) {\n    const movieName = prompt(\n      `Enter the name of the ${type.toLowerCase()} movie:`\n    );\n    if (movieName !== null && movieName.trim() !== '') {\n      moviesArray.push(movieName);\n      updateMovies(container, moviesArray);\n    }\n  }\n\n  watchedButton.addEventListener('click', function () {\n    handleButtonClick('WATCHED', watchedMovies, watchedMoviesContainer);\n  });\n\n  queueButton.addEventListener('click', function () {\n    handleButtonClick('Queue', queuedMovies, queueMoviesContainer);\n  });\n\n  // Event listener for the \"CLEAR WATCHED LIST\" button\n  clearButton.addEventListener('click', function () {\n    watchedMovies.length = 0;\n    updateMovies(watchedMoviesContainer, watchedMovies);\n  });\n\n  // You can add more event listeners and functionality as needed\n});\n\n//MODAL WINDOW\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var modal = document.getElementById('myModal');\n  var movieCards = document.querySelectorAll('.movie-card');\n\n  function openModal(movieId) {\n    var closeBtn = document.querySelector('.close');\n    var movieTitleElem = document.querySelector('.movie-title');\n    var movieOverviewElem = document.querySelector('.movie-overview');\n    var movieReleaseDateElem = document.querySelector('.movie-release-date');\n\n    // Fetch movie details from the API\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=5b28406cf15f01386b735b4e48c0f3f4`\n    )\n      .then(response => response.json())\n      .then(data => {\n        // Update modal content with movie details\n        movieTitleElem.textContent = data.title;\n        movieOverviewElem.textContent = data.overview;\n        movieReleaseDateElem.textContent = `Release Date: ${data.release_date}`;\n        // Update more elements with other movie details as needed\n\n        modal.style.display = 'block';\n      })\n      .catch(error => console.error('Error fetching movie details:', error));\n\n    // Event listener for the close button inside the modal\n    closeBtn.addEventListener('click', closeModal);\n  }\n\n  function closeModal() {\n    modal.style.display = 'none';\n  }\n\n  movieCards.forEach(function (card) {\n    card.addEventListener('click', function () {\n      // Get the movie ID from the card's data attribute or any other method you use\n      var movieId = card.dataset.movieId; // Adjust this based on your card structure\n\n      // Open the modal with the selected movie's details\n      openModal(movieId);\n    });\n  });\n\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n});\n"],"names":["document","addEventListener","watchedButton","getElementById","queueButton","clearButton","watchedMoviesContainer","querySelector","queueMoviesContainer","watchedMovies","queuedMovies","updateMovies","container","movies","innerHTML","forEach","movie","movieItem","createElement","textContent","appendChild","handleButtonClick","type","moviesArray","movieName","prompt","toLowerCase","trim","push","length","modal","closeModal","style","display","querySelectorAll","card","movieId","closeBtn","movieTitleElem","movieOverviewElem","movieReleaseDateElem","fetch","then","response","json","data","title","overview","release_date","catch","error","console","openModal","dataset","window","event","target"],"version":3,"file":"my-library.21bdbe8c.js.map"}