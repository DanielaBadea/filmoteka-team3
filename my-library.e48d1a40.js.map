{"mappings":"oeAeA,IAAAA,EAAAC,EAAA,S,aAGAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,GAAmB,EAEHF,SAASG,cAAc,gBAC/BF,iBAAiB,SAE7B,WACE,MAAMG,EAAkBJ,SAASG,cAAc,sBAE/C,GAAID,EACHE,EAAgBC,UAAY,GAC3BH,GAAmB,MACd,CACL,MAAMI,GAAc,EAAAR,EAAAS,kBAAiB,UAAY,GAEjD,GAAID,GAAeA,EAAYE,OAAS,EAAG,CAEzC,MAAMC,EAqCd,SAAiCH,GAC/B,MAAMI,GAAa,EAAAZ,EAAAS,kBAAiB,cAC9BI,GAAa,EAAAb,EAAAS,kBAAiB,cACpC,IAAIK,EAAiB,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAYE,OAAQK,IACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWF,OAAQM,IACrC,GAAIC,SAASL,EAAWI,GAAGE,MAAQD,SAAST,EAAYO,IAAK,CAE3D,MAAMI,EAAe,IAAKP,EAAWI,IACrCG,EAAaC,YAAcP,EAAWQ,QAAOC,GAASH,EAAaI,UAAUC,SAASF,EAAMJ,MAAKO,KAAIH,GAASA,EAAMI,OAAMC,KAAK,MAC/Hb,EAAec,KAAKT,E,CAI1B,OAAOL,C,CApDYe,CAAwBrB,GACRiB,KAAI,EAACK,eAAEA,EAAcC,YAAEA,EAAWC,aAAEA,EAAYd,GAAEA,EAAEE,YAAEA,EAAWa,aAAEA,MAC9F,IAAIC,EAAa,GAEfA,EADEH,EACW,GAAGI,EAAAC,eAAeD,EAAAE,YAAYN,IAE9B,mBAEf,MAAMO,EAAcL,EAAaM,MAAM,EAAG,GAC1C,MAAO,oCAAoCrB,qFAGhCgB,0BACAJ,qHAIwBE,EAAaQ,QAAQ,sHAEJV,sHAEHV,oEACCkB,kEAG5C,IACLX,KAAK,IAERrB,EAAgBC,UAAYI,EAC5BP,GAAmB,C,MAEnBE,EAAgBC,UAAY,kCAC5BH,GAAmB,C","sources":["src/js/queue.js"],"sourcesContent":["// document.addEventListener('DOMContentLoaded', function(){\n//     const queue=document.getElementById('queueButton');\n//     const hiddenQueue = document.querySelector('.hiddenContent-queue');\n//     let imgVisible = false;\n//     queue.addEventListener('click', function(){\n//         if(imgVisible){\n//             hiddenQueue.style.display = 'none';\n//             imgVisible = false;\n//         }else{\n//             hiddenQueue.style.display = 'block';\n//             imgVisible = true;\n\n//         }\n//     })\n// });\nimport { loadLocalStorage} from \"./storage\";\nimport { IMG_BASE_URL, IMG_W500 } from \"./api\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  let isContentVisible = false; \n\n  const queueButton = document.querySelector('#queueButton');\n  queueButton.addEventListener('click', handleQueueButtonClick);\n\n  function handleQueueButtonClick() {\n    const queueMoviesList = document.querySelector('.queue-movies-list');\n\n    if (isContentVisible) {\n     queueMoviesList.innerHTML = '';\n      isContentVisible = false;\n    } else {\n      const queueMovies = loadLocalStorage('queue') || [];\n\n      if (queueMovies && queueMovies.length > 0) {\n        var movies = getWatchedMoviesDetails(queueMovies);\n        const postersMarkup = movies.map(({ original_title, poster_path, vote_average, id, genre_names, release_date }) => {\n          let posterPath = '';\n          if (poster_path) { \n            posterPath = `${IMG_BASE_URL}${IMG_W500}/${poster_path}`;\n          } else { \n            posterPath = 'No found poster!';\n          }\n          const releaseYear = release_date.slice(0, 4);\n          return `<li class='list-cards-item' key='${id}'>\n            <img\n              class='poster-list__img'\n              src='${posterPath}'\n              alt='${original_title}'\n              width\n              loading='lazy'\n            />\n            <span class='poster-list-rate'>${vote_average.toFixed(1)}</span>\n            <div class='poster-list-wrap'>\n              <h2 class='poster-list-title text-posters'><b>${original_title}</b></h2>\n              <div class='poster-list-info'>\n                <p class='poster-list-text text-posters'>${genre_names}</p>\n                <p class='poster-list-age text-posters'>| ${releaseYear}</p>\n              </div>\n            </div>\n          </li>`;\n        }).join('');\n\n        queueMoviesList.innerHTML = postersMarkup;\n        isContentVisible = true;\n      } else {\n        queueMoviesList.innerHTML = '<p>No watched movies found.</p>';\n        isContentVisible = true;\n      }\n    }\n  }\n});\n\nfunction getWatchedMoviesDetails(queueMovies) {\n  const moviesData = loadLocalStorage('moviesData');\n  const genresList = loadLocalStorage('genresList');\n  var moviesDetailed = [];\n  for (let i = 0; i < queueMovies.length; i++) {\n    for (let j = 0; j < moviesData.length; j++) {\n      if (parseInt(moviesData[j].id) === parseInt(queueMovies[i])) {\n        // Adăugați informații despre genuri în detaliile filmelor\n        const movieDetails = { ...moviesData[j] };\n        movieDetails.genre_names = genresList.filter(genre => movieDetails.genre_ids.includes(genre.id)).map(genre => genre.name).join(', ');\n        moviesDetailed.push(movieDetails);\n      }\n    }\n  }\n  return moviesDetailed;\n}\n"],"names":["$5uEKZ","parcelRequire","document","addEventListener","isContentVisible","querySelector","queueMoviesList","innerHTML","queueMovies","loadLocalStorage","length","postersMarkup","moviesData","genresList","moviesDetailed","i","j","parseInt","id","movieDetails","genre_names","filter","genre","genre_ids","includes","map","name","join","push","$a595e1401ec493e7$var$getWatchedMoviesDetails","original_title","poster_path","vote_average","release_date","posterPath","$7rYDH","IMG_BASE_URL","IMG_W500","releaseYear","slice","toFixed"],"version":3,"file":"my-library.e48d1a40.js.map"}