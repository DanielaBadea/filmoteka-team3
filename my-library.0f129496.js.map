{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,uCAGAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,GAAmB,EAEDF,SAASG,cAAc,kBAC/BF,iBAAiB,SAE/B,WACE,IAAMG,EAAoBJ,SAASG,cAAc,wBAEjD,GAAID,EACFE,EAAkBC,UAAY,GAC9BH,GAAmB,MACd,CACL,IAAMI,GAAgB,EAAAC,EAAAC,kBAAiB,YAAc,GAErD,GAAIF,GAAiBA,EAAcG,OAAS,EAAG,CAC7C,IAAIC,EAsCZ,SAAiCJ,GAI/B,I,kBACE,I,kBACE,GAAIK,SAASC,EAAWC,GAAGC,MAAQH,SAASL,EAAcS,IAAK,CAE7D,IAAMC,EAAeC,EAAAnB,EAAA,IAAKc,EAAWC,IACrCG,EAAaE,YAAcC,EAAWC,QAAO,SAAAC,G,OAASL,EAAaM,UAAUC,SAASF,EAAMP,G,IAAKU,KAAI,SAAAH,G,OAASA,EAAMI,I,IAAMC,KAAK,MAC/HC,EAAeC,KAAKZ,E,GALfa,EAAI,EAAGA,EAAIjB,EAAWH,OAAQoB,IAAGC,EAAAD,E,EAJtCjB,GAAa,EAAAL,EAAAC,kBAAiB,cAC9BW,GAAa,EAAAZ,EAAAC,kBAAiB,cAChCmB,EAAiB,GACZI,EAAI,EAAGA,EAAIzB,EAAcG,OAAQsB,IAAGC,EAAAD,GAU7C,OAAOJ,C,CApDYM,CAAwB3B,GAC/B4B,EAAgBxB,EAAOc,KAAI,SAAAW,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAAcxB,EAAEqB,EAAFrB,GAAII,EAAWiB,EAAXjB,YAAaqB,EAAYJ,EAAZI,aAC1FC,EAAa,GAEfA,EADEH,EACW,GAAkBI,OAAfC,EAAAC,cAA2BF,OAAZC,EAAAE,SAAS,KAAeH,OAAZJ,GAE9B,mBAEf,IAAMQ,EAAcN,EAAaO,MAAM,EAAG,GAC1C,MAAO,oCAGIL,OAHgC3B,EAAG,qFAInC2B,OADAD,EAAW,0BAKaC,OAJxBL,EAAe,qHAM0BK,OAFjBH,EAAaS,QAAQ,GAAG,qHAIVN,OAFGL,EAAe,sHAGjBK,OADDvB,EAAY,oEACCuB,OAAZI,EAAY,kE,IAI7DnB,KAAK,IAERtB,EAAkBC,UAAY6B,EAC9BhC,GAAmB,C,MAEnBE,EAAkBC,UAAY,kCAC9BH,GAAmB,C,QAsB3B,IAAM8C,EAAOhD,SAASG,cAAc,wBAChC6C,GACFA,EAAK/C,iBAAiB,SAGxB,SAAyBgD,IACvB,EAAAC,EAAAC,aAAYF,E","sources":["src/js/watched.js"],"sourcesContent":["// import { STORAGE_KEY_WATCHED } from \"./constants\";\nimport { loadLocalStorage} from \"./storage\";\nimport { IMG_BASE_URL, IMG_W500 } from \"./api\";\nimport { createModal } from \"./modal-cards\";\ndocument.addEventListener('DOMContentLoaded', function() {\n  let isContentVisible = false; \n\n  const watchedButton = document.querySelector('#watchedButton');\n  watchedButton.addEventListener('click', handleWatchedButtonClick);\n\n  function handleWatchedButtonClick() {\n    const watchedMoviesList = document.querySelector('.watched-movies-list');\n\n    if (isContentVisible) {\n      watchedMoviesList.innerHTML = '';\n      isContentVisible = false;\n    } else {\n      const watchedMovies = loadLocalStorage('watched') || [];\n\n      if (watchedMovies && watchedMovies.length > 0) {\n        var movies = getWatchedMoviesDetails(watchedMovies);\n        const postersMarkup = movies.map(({ original_title, poster_path, vote_average, id, genre_names, release_date }) => {\n          let posterPath = '';\n          if (poster_path) { \n            posterPath = `${IMG_BASE_URL}${IMG_W500}/${poster_path}`;\n          } else { \n            posterPath = 'No found poster!';\n          }\n          const releaseYear = release_date.slice(0, 4);\n          return `<li class='list-cards-item' key='${id}'>\n            <img\n              class='poster-list__img'\n              src='${posterPath}'\n              alt='${original_title}'\n              width\n              loading='lazy'\n            />\n            <span class='poster-list-rate'>${vote_average.toFixed(1)}</span>\n            <div class='poster-list-wrap'>\n              <h2 class='poster-list-title text-posters'><b>${original_title}</b></h2>\n              <div class='poster-list-info'>\n                <p class='poster-list-text text-posters'>${genre_names}</p>\n                <p class='poster-list-age text-posters'>| ${releaseYear}</p>\n              </div>\n            </div>\n          </li>`;\n        }).join('');\n\n        watchedMoviesList.innerHTML = postersMarkup;\n        isContentVisible = true;\n      } else {\n        watchedMoviesList.innerHTML = '<p>No watched movies found.</p>';\n        isContentVisible = true;\n      }\n    }\n  }\n});\n\nfunction getWatchedMoviesDetails(watchedMovies) {\n  const moviesData = loadLocalStorage('moviesData');\n  const genresList = loadLocalStorage('genresList'); // Încărcați lista de genuri\n  var moviesDetailed = [];\n  for (let i = 0; i < watchedMovies.length; i++) {\n    for (let j = 0; j < moviesData.length; j++) {\n      if (parseInt(moviesData[j].id) === parseInt(watchedMovies[i])) {\n        // Adăugați informații despre genuri în detaliile filmelor\n        const movieDetails = { ...moviesData[j] };\n        movieDetails.genre_names = genresList.filter(genre => movieDetails.genre_ids.includes(genre.id)).map(genre => genre.name).join(', ');\n        moviesDetailed.push(movieDetails);\n      }\n    }\n  }\n  return moviesDetailed;\n}\nconst list = document.querySelector('.library-movies-list');\nif (list) {\n  list.addEventListener('click', handleListClick);\n};\n\nfunction handleListClick(event) {\n  createModal(event);\n}\n"],"names":["$dDDEV","parcelRequire","document","addEventListener","isContentVisible","querySelector","watchedMoviesList","innerHTML","watchedMovies","$jzQFI","loadLocalStorage","length","movies","parseInt","moviesData","j","id","i","movieDetails","$parcel$interopDefault","genre_names","genresList","filter","genre","genre_ids","includes","map","name","join","moviesDetailed","push","j1","_loop","i1","_loop1","$a215baf1061f969f$var$getWatchedMoviesDetails","postersMarkup","param","original_title","poster_path","vote_average","release_date","posterPath","concat","$b7ONl","IMG_BASE_URL","IMG_W500","releaseYear","slice","toFixed","$a215baf1061f969f$var$list","event","$57y1b","createModal"],"version":3,"file":"my-library.0f129496.js.map"}